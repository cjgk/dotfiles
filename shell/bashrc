# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Basics
export TERM=xterm-256color
export EDITOR=vim

# Colours
export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
export CLICOLOR=0
export LSCOLORS=ExGxFxDxCxHxHxCbCeEbEb

t_reset='\033[0;0m' 
t_red='\033[0;31m'
t_green='\033[0;32m'
t_yellow='\033[0;33m'
t_blue='\033[0;34m'
t_purple='\033[0;35m'
t_cyan='\033[0;36m'

# Misc.
shopt -s histappend

# Functions 
bgjobs() {
    joblist=`jobs | awk 'IF NR > 1 {printf ", " } {printf "'${t_blue}'%s'${t_reset}'", $3}'`
    [ -n "$joblist" ] && echo "("$joblist")"
}

gitinfo() {
    gitroot=`git rev-parse --show-toplevel 2> /dev/null`

    [ -z "$gitroot" ] && return
    
    status=`git status --porcelain --branch`
    branch=`echo "$status" | head -n1 | cut -c 4-`
    branch=${branch%...*}

    # Count staged changes, unstaged changes, unversioned files
    staged=`echo "$status" | grep -e '^M\|A' | wc -l | tr -d ' '`
    unstaged=`echo "$status" | grep '^ M' | wc -l | tr -d ' '`
    unversioned=`echo "$status" | grep '^?' | wc -l | tr -d ' '`

    if [ -n $staged ]; then staged="*${staged}"; fi
    if [ -n $unstaged ]; then unstaged="+${unstaged}"; fi
    if [ -n $unversioned ]; then unversioned="?${unversioned}"; fi

    echo -e "[${t_green}${branch}${t_reset} ${staged} ${unstaged} ${unversioned}]"
}

# Prompt
PS1='\n'${t_yellow}'\u'${t_reset}' @ \h in '${t_purple}'\w'${t_reset}' `gitinfo` `bgjobs` \n\$ '

# Aliases
alias tree="tree --dirsfirst -F"
alias gitlog='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'
alias gitfiles='git status | grep -P "#\t" | cut -c 15-'
alias gofmtproj='go fmt ./...'
alias tmux='tmux -2'

if [ x`which ack-grep 2>/dev/null` != x ]; then
  alias ack=ack-grep
fi

if [ `uname` == "Darwin" ]; then
  alias ls='ls -Fh'
else
  alias ls='ls --color=auto'
fi

# Bindings
bind '"\e[24~":"\C-k \C-ugit status -sb\n"' #F12 for git status

# Plugins
if hash brew 2>/dev/null; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        . $(brew --prefix)/etc/bash_completion
    fi
elif ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
